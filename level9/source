class N {
	public:
		N(int number) : _number(number) {}
		virtual ~N() {}

		int operator+(N & rhs) {
			return _number + rhs._number;
		}

		int		operator-(N &rhs) {
			return _number - rhs._number;
		}

		void setAnnotation(char * str) {
			int len;
			len = strlen(str);
			memcpy(_str, str, len);
		}

	public:
		char	_str[100];  // *this+0x4 (4)
		int		_number;    // *this+0x68 (104)
};

int main(int ac, char ** av) {
	if (ac <= 1)
		exit();

	N * N1;
	N1 = new N(5);

	N * N2;
	N2 = new N(6);

	N &refN1 = *N1;
	N &refN2 = *N2;

	refN1.setAnnotation(av[1]);

	return refN2 + refN1;
}
